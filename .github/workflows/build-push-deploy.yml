name: CI/CD Django + Flutter

on:
  push:
    branches:
      - main       # deploy para produção
  workflow_dispatch:

env:
  # initial value (may contain uppercase)
  IMAGE_NAME: ghcr.io/${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Lowercase IMAGE_NAME for Docker tags
        run: |
          echo "IMAGE_NAME=$(echo \"$IMAGE_NAME\" | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Log in to Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ github.ref_name }}
            ${{ env.IMAGE_NAME }}:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy via SSH & Docker-Compose
        uses: appleboy/ssh-action@v0.1.10
        with:
          host:     ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USER }}
          key:      ${{ secrets.DROPLET_SSH_KEY }}
          # password-based auth example, if you prefer:
          #     password: ${{ secrets.VM_PASSWORD }}
          script: |
            cd /path/para/seu/app
            # Puxa a imagem correspondente ao branch
            docker-compose pull
            # Recria containers (serviços Django + Flutter)
            docker-compose up -d
            docker-compose logs --tail=50
